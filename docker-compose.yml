# LigeroSmart with Docker Swarm mode
#
# Ref.: https://docs.docker.com/engine/swarm/
#
# Enviroment variables description
#
# PROJECT_NAME 
#    Name for default stack used on elasticsearch index preffix
# 
# WEBSERVER_FQDN
#    DNS resolved name for application access. It's is used on FQDN system reference, 
#    to internal URL format, also to SSL keys auto creation if Letsencript support is enabled
# 
# TZ
#    server time zone
#
# Docker Swarm configuration
# 
# In the nodes of your Docker Swarm you must define the labels for 
# the respective nodes where the services will run. The list of labels are:
#
# webserver == true
# cache == true
# database == true
# elasticsearch == true
# grafana == true
#

version: '3.5'

services:

  ingress:
    image: traefik:v1.7
    restart: always
    command: 
      # - --api
      - --docker
      - --docker.watch=true 
      - --docker.exposedbydefault=false
      - --debug=false
      - --logLevel=WARN
      ## HTTP only (remove line above if HTTPS is active)
      - --entryPoints=Name:http Address::80
      ## HTTPS
      #- --defaultentrypoints=https,http
      #- --entryPoints=Name:http Address::80 Redirect.EntryPoint:https
      #- --entryPoints=Name:https Address::443 TLS
      ## letsencrypt
      #- --acme
      #- --acme.email=${ACME_EMAIL}
      #- --acme.storage=/ssl/acme.json
      #- --acme.entryPoint=https
      #- --acme.onHostRule=true
      #- --acme.httpchallenge.entrypoint=http
      # other ssl
      #- --entryPoints=Name:https Address::443 TLS:/ssl/www.mycert.com.crt,/ssl/www.mycert.com.key
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    ports:
      - 80:80
      - 443:443 

  web:
    image: ligero/ligerosmart:6.1-nginx
    volumes:
      - ligero-data:/opt/otrs
      - app-backups:/app-backups
    environment:
      - APP_DatabaseType=mysql
      - APP_DatabaseHost=database
      - APP_Database=ligerosmart
      - APP_DatabaseUser=ligerosmart
      - APP_DatabasePw=Hc7b23BG53Ug
      - APP_NodeID={{.Task.Slot}}
      - APP_LigeroSmart_Node=elasticsearch
      - APP_CustomerID=${PROJECT_NAME}
      - APP_FQDN=${WEBSERVER_FQDN}
      - APP_DefaultLanguage=pt_BR
      - TZ=${TZ:-America/Sao_Paulo}
      - START_SCHEDULER=0
      - ROOT_PASSWORD=${ROOT_PASSWORD:-ligero}
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.webserver == true
      update_config:
        parallelism: 1
        delay: 10s
      resources:
        limits:
          cpus: '1'
          memory: 3G
      labels:
        - traefik.enable=true
        - traefik.port=80
        - traefik.default.frontend.rule=Host:${WEBSERVER_FQDN}
        #- traefik.user.frontend.rule=Host:${WEBSERVER_FQDN};Path:/atendente;ReplacePath:/otrs/index.pl
        #- traefik.customer.frontend.rule=Host:${WEBSERVER_FQDN};Path:/;ReplacePath:/otrs/customer.pl
        - traefik.protocol=http
        - traefik.frontend.headers.customResponseHeaders=access-control-allow-origin:*

  scheduler:
    image: ligero/ligerosmart:6.1-scheduler
    volumes:
      - ligero-data:/opt/otrs
      - app-backups:/app-backups
    environment:
      - APP_DatabaseType=mysql
      - APP_DatabaseHost=database
      - APP_Database=ligerosmart
      - APP_DatabaseUser=ligerosmart
      - APP_DatabasePw=Hc7b23BG53Ug
      - APP_NodeID={{.Task.Slot}}
      - APP_LigeroSmart_Node=elasticsearch
      - APP_CustomerID=${PROJECT_NAME}
      - APP_FQDN=${WEBSERVER_FQDN}
      - TZ=${TZ:-America/Sao_Paulo}
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
        - node.labels.webserver == true
      resources:
        limits:
          cpus: '1'
          memory: 2G

  cache:
    image: redis:6-buster
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
        - node.labels.cache == true
      resources:
        limits:
          cpus: '1'
          memory: 2G
      
  database:
    image: mariadb:10.3
    volumes:
      - mariadb-data:/var/lib/mysql
    restart: unless-stopped
    environment:
      - MYSQL_ROOT_PASSWORD=Q6w8kEkO5Jbr2
      - MYSQL_DATABASE=ligerosmart
      - MYSQL_USER=ligerosmart
      - MYSQL_PASSWORD=Hc7b23BG53Ug
      - TZ=${TZ:-America/Sao_Paulo}
    command:
      - --max-allowed-packet=64M
      - --innodb-log-file-size=256M
      - --innodb-buffer-pool-size=1G
      - --log-output=TABLE
      - --slow-query-log=1
      - --character-set-server=utf8
      - --bind-address=0.0.0.0
      - --innodb-use-native-aio=0
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.database == true
      resources:
        limits:
          cpus: '1'
          memory: 2G

  grafana:
    image: dockerhub.complemento.net.br/grafana
    environment:
      - GF_SERVER_ROOT_URL=/grafana/
      - TZ=${TZ:-America/Sao_Paulo}
    volumes:
      - grafana-data:/var/lib/grafana
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.grafana == true
      labels:
      - traefik.enable=true
      - traefik.port=3000
      - traefik.frontend.rule=Host:${WEBSERVER_FQDN};PathPrefixStrip:/grafana
      - traefik.protocol=http
      - traefik.frontend.headers.customResponseHeaders=access-control-allow-origin:*
    
  elasticsearch:
    image: ligero/elasticsearch:6.5.1
    volumes:
      - elasticsearch-data:/usr/share/elasticsearch/data
    environment:
      - cluster.name=ligero-cluster
      - "ES_JAVA_OPTS=-Xms1024m -Xmx1024m"
      - TZ=${TZ:-America/Sao_Paulo}
    deploy:
      mode: replicated
      replicas: 1
      placement:
        constraints:
          - node.labels.elasticsearch == true
      resources:
        limits:
          cpus: '1'
          memory: 2G

volumes:
  ligero-data:
    driver: local
  app-backups:
    driver: local
  mariadb-data:
    driver: local
  grafana-data:
    driver: local
  elasticsearch-data:
    driver: local
